@model SchoolSys.DataViewModels.StudentWithMarksViewModel
@{
    ViewData["Title"] = "StudentDetail";
}

<h1>StudentDetail</h1>

<div>
    <label asp-for="@Model.student.FirstName"></label>
    <a>: @Model.student.FirstName</a>
    <br />
    <label asp-for="@Model.student.LastName"></label>
    <a>: @Model.student.LastName</a>
    <br />
    <label asp-for="@Model.student.PESEL"></label>
    <a>: @Model.student.PESEL</a>
    <br />
    <label asp-for="@Model.student.Address"></label>
    <a>: @Model.student.Address</a>
    <br />
    <label asp-for="@Model.student.TelephoneNumber"></label>
    <a>: @Model.student.TelephoneNumber</a>
    <br />
    <label asp-for="@Model.student.MailAddress"></label>
    <a>: @Model.student.MailAddress</a>
    <br />
    <a asp-action="EditUser" asp-route-id="@Model.student.Id"><input type="button" value="Edit User Data" /></a>
    <br />

    <label asp-for="@Model.StudentClass.ClassName"></label>
    @if (!(Model.StudentClass == null))
    {

        <a>: @Model.StudentClass.ClassName</a>

    }
    <a asp-action="AddStudentToClass" asp-route-id="@Model.student.Id"><input type="button" value="Change class" /></a>
    <br />
</div>

<div>
    @{
        string subjectName = System.String.Empty;
    }
    @if (this.User.IsInRole("Teacher"))
    {
    <a asp-action="AddMark" asp-route-id="@Model.student.Id">ADD NEW MARK</a>
    }
    

    @foreach (var marks in Model.marks)
    {
        if (!subjectName.Equals(marks.Subject.SubjectName))
        {
            <h2>@marks.Subject.SubjectName</h2>


        }


        <a>@marks.TheMark </a>

        @if (this.User.IsInRole("Teacher"))
        {<a asp-action="EditMark" asp-route-id="@marks.Id"><input type="button" value="Edit" /></a>
            <a asp-action="DeleteMark" asp-route-id="@marks.Id"><input type="button" value="DELETE" /></a>}


        subjectName = marks.Subject.SubjectName;
    }
</div>


